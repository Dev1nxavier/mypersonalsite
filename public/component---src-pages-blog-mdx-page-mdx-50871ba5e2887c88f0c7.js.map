{"version":3,"file":"component---src-pages-blog-mdx-page-mdx-50871ba5e2887c88f0c7.js","mappings":"6NAgBsBA,E,kEAPTC,EAAe,CAC1B,MAAS,8CACT,KAAQ,aACR,WAAc,uBACd,IAAO,sCAQHC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,KAIZG,EAAc,CAClBL,aAAAA,GAGa,SAASM,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGL,GACF,YACD,OAAO,SALS,UAKT,iBAAeG,EAAiBH,EAAhC,CAAuCK,WAAYA,EAAYC,QAAQ,eAE5E,sPACA,0GACA,qDACA,oBACE,eAAIC,WAAW,OACb,cAAGA,WAAW,MAAd,mEACA,cAAGA,WAAW,MAAd,wBAA2C,mBAAQA,WAAW,KAAnB,qBAA3C,UAGJ,sDACQ,iBAAMA,WAAW,wBACrB,KAAQ,QADJ,qCADR,eAKA,eACE,MAAS,IAET,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,WAA8B,mBAAQA,WAAW,KAAnB,oBAA9B,QACA,cAAGA,WAAW,MAAd,gJAGJ,kCACE,SAAY,aACZ,kBAAmB,KAFrB,gBAIQ,iBAAMA,WAAW,wBACrB,KAAQ,QADJ,0WAJR,eAkBA,eACE,MAAS,IAET,eAAIA,WAAW,MAAf,qCAEF,kCACE,SAAY,aACZ,kBAAmB,OAFrB,gBAIQ,iBAAMA,WAAW,wBACrB,KAAQ,QADJ,oFAJR,eASA,yCACA,+FACA,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,mCACA,cAAGA,WAAW,MAAd,6DAGJ,sDACQ,iBAAMA,WAAW,wBACrB,KAAQ,QADJ,0CADR,eAKA,eACE,MAAS,IAET,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,kCACA,cAAGA,WAAW,MAAd,8FACA,cAAGA,WAAW,MAAd,8GAGJ,sDACQ,iBAAMA,WAAW,wBACrB,KAAQ,QADJ,oHADR,eASA,oBAAI,eAAIA,WAAW,MAAf,yBAAJ,MACA,yQAA0P,cAAGA,WAAW,IACpQ,KAAQ,2BAD8O,4BAA1P,uBAGA,kCACE,SAAY,aACZ,kBAAmB,QAFrB,gBAIQ,iBAAMA,WAAW,wBACrB,KAAQ,QADJ,0XAJR,eA2BA,yCACA,yFAA0E,eAAIA,WAAW,MAAzF,kBACW,eAAIA,WAAW,KAAf,WADX,6CAC2F,eAAIA,WAAW,KAAf,cAD3F,4LAEA,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,yDAA4E,eAAIA,WAAW,MAA3F,uFAC4E,eAAIA,WAAW,MAD3F,uBAGA,kCAAuBA,WAAW,MAAlC,gBACI,iBAAMA,WAAW,wBACjB,KAAQ,QADR,0CADJ,eAMA,cAAGA,WAAW,MAAd,8FAAmH,eAAIA,WAAW,MAAlI,6CACkC,cAAGA,WAAW,IAC5C,KAAQ,uDADsB,QADlC,OAKF,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,2EAA8F,eAAIA,WAAW,MAA7G,4DACiD,cAAGA,WAAW,IAC3D,KAAQ,2BADqC,eADjD,qBAKF,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,wCAA2D,eAAIA,WAAW,MAA1E,4HACiH,mBAAQA,WAAW,KAAnB,mCADjH,2BAC+M,eAAIA,WAAW,MAD9N,wBAGA,kCAAuBA,WAAW,MAAlC,gBACI,iBAAMA,WAAW,wBACjB,KAAQ,QADR,8LADJ,eAUA,cAAGA,WAAW,MAAd,KAAwB,eAAIA,WAAW,KAAf,0FAAxB,SAEF,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,oCAAuD,eAAIA,WAAW,MAAtE,8JAIJ,SAAC,IAAD,CAAMC,GAAI,CACRC,MAAO,KACNH,QAAQ,SACT,SAACP,EAAD,CAAaO,QAAQ,eAArB,0BAQNF,EAAWM,gBAAiB","sources":["webpack://my-gatsby-portfolio-site/./src/pages/blog/mdx-page.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { Link } from 'gatsby';\nimport { Card, CardActions, CartContent, CardMedia, Button } from '@mui/material';\nexport const _frontmatter = {\n  \"title\": \"building a Gatsby webpage directly from MDX\",\n  \"date\": \"2022-05-07\",\n  \"hero_image\": \"./brain_diagram.jpeg\",\n  \"alt\": \"Image of 2D brain with neon lights\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst CardContent = makeShortcode(\"CardContent\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Gatsby has an incredible ability to quickly create reusable components and pages directly from MDX, Markdown language with the ability to use JSX components. This is great for content-driven sites like blogs and tutorials. `}</p>\n    <p>{`The following is a step-by step guide that includes callouts to common pitfalls.   `}</p>\n    <h1>{`Configuring Gatsby to use MDX`}</h1>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`First, we need to download and configure Gatsby to read MDX   `}</p>\n        <p parentName=\"li\">{`Start by installing `}<strong parentName=\"p\">{`gatsby-plugin-mdx`}</strong>{`   `}</p>\n      </li>\n    </ol>\n    <deckgo-highlight-code>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`    npm install gatsby-plugin-mdx`}</code>{`\n        `}</deckgo-highlight-code>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Update `}<strong parentName=\"p\">{`gatsby-config.js`}</strong>{`   `}</p>\n        <p parentName=\"li\">{`Since we are creating a .mdx page under src/pages we don't need to add any plugins to acces this in the site Node. More on this later.   `}</p>\n      </li>\n    </ol>\n    <deckgo-highlight-code {...{\n      \"language\": \"javascript\",\n      \"highlight-lines\": \"8\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`    module.exports = {   \n        siteMetadata: {   \n            title: \\`My Gatsby Site\\`,   \n            siteUrl: \\`https://www.yourdomain.tld\\`,   \n            },   \n            plugins: [   \n                \"gatsby-plugin-netlify-cms\"   \n                \"gatsby-plugin-mdx\",   \n                \"gatsby-plugin-image\",   \n            ],   \n    };    `}</code>{`\n        `}</deckgo-highlight-code>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Restart your development server`}</li>\n    </ol>\n    <deckgo-highlight-code {...{\n      \"language\": \"javascript\",\n      \"highlight-lines\": \"1,2\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`    ^C   \n    npm start develop //or gatsby develop if you installed Gatsby CLI`}</code>{`\n        `}</deckgo-highlight-code>\n    <h1>{`Creating MDX URLs`}</h1>\n    <h4>{`Now that your Gatsby site is using MDX, its time to create our page.mdx`}</h4>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a new page.mdx file    `}</p>\n        <p parentName=\"li\">{`Under src > pages > create a new my-markup-page.mdx   `}</p>\n      </li>\n    </ol>\n    <deckgo-highlight-code>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`    touch src/pages/my-markup-page.mdx`}</code>{`\n        `}</deckgo-highlight-code>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Creating frontmatter medidata`}</p>\n        <p parentName=\"li\">{`MDX can use page medata. This data can be accessed in a GraphQl query under frontmatter  `}</p>\n        <p parentName=\"li\">{`In the newly created .mdx file, at the very top of the page record page data surrounded by 3 dashes:   `}</p>\n      </li>\n    </ol>\n    <deckgo-highlight-code>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`    ---\n    title: \"page title\"\n    date: \"YYY-MM-D\"\n    hero_image:\"../images/exampleImage.jpeg\"   \n    ---`}</code>{`\n        `}</deckgo-highlight-code>\n    <h3><em parentName=\"h3\">{`A note on frontmatter`}</em>{`:`}</h3>\n    <p>{`frontmatter lets us access page medidata such as title, hero images, dates and more which can be accessed via GraphQL query. To query data, MDX files must be added to the site Node system using a plugin such as gatsby-source-filesystem. Visit `}<a parentName=\"p\" {...{\n        \"href\": \"/blog/source-filesystem\"\n      }}>{`Gatsby Source Filesystem`}</a>{` for instructions.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"javascript\",\n      \"highlight-lines\": \"4,15\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`    query MyQuery {\n    allMdx {\n        nodes {\n        frontmatter {\n            header\n            title\n            alt\n            date(formatString: \"MMMM DD YYYY\")\n            _image {\n            childImageSharp {\n                gatsbyImageData\n            }\n            publicURL\n            }\n        }\n        slug\n        id\n        }\n    }\n}`}</code>{`\n        `}</deckgo-highlight-code>\n    <h1>{`Styling your page`}</h1>\n    <p>{`Now that we have our page created we can start writing our content.`}<br parentName=\"p\"></br>{`\n`}{`MDX is a `}<em parentName=\"p\">{`writing`}</em>{` language (as opposed to html which is a `}<em parentName=\"p\">{`publishing`}</em>{` language). That means its most suited for basic formatting of plain-text. Once we have our basic content written, there are a few things we can do to improve the look of the page.   `}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add the page title to the body from the page medidata`}<br parentName=\"p\"></br>{`\n`}{`We can grab the page title from the medidata block by accessing the page props`}<br parentName=\"p\"></br>{`\n`}{`javascript{1}`}</p>\n        <deckgo-highlight-code parentName=\"li\">{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n            \"slot\": \"code\"\n          }}>{` <h1>{props.pageContext.title}</h1>\n `}</code>{`\n        `}</deckgo-highlight-code>\n        <p parentName=\"li\">{`Did you notice the html `}{`<`}{`h1> tags? We can use regular html directly in our MDX file.`}<br parentName=\"p\"></br>{`\n`}{`You can read more on MDX formatting `}<a parentName=\"p\" {...{\n            \"href\": \"https://daringfireball.net/projects/markdown/syntax\"\n          }}>{`here`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Under the page medata write content that will be the body of your page.`}<br parentName=\"p\"></br>{`\n`}{`Not inspired to write that novel yet? Trying using `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.lipsum.com/\"\n          }}>{`Lorem Ipsum`}</a>{` for filler.   `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Import Components into your MDX file`}<br parentName=\"p\"></br>{`\n`}{`Just like accessing html elements directly, we can use Components directly in our MDX file. At the top of the page `}<strong parentName=\"p\">{`underneath the medidata section`}</strong>{` import your components`}<br parentName=\"p\"></br>{`\n`}{`javascript{6} `}</p>\n        <deckgo-highlight-code parentName=\"li\">{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n            \"slot\": \"code\"\n          }}>{` ---\n title: \"page title\"\n date: \"YYY-MM-D\"\n hero_image:\"../images/exampleImage.jpeg\"   \n ---\n import { Card, CardActions, CartContent, CardMedia, Button } from '@mui/material'   `}</code>{`\n        `}</deckgo-highlight-code>\n        <p parentName=\"li\">{` `}<em parentName=\"p\">{`this is an example. You are free to use whatever library or custom component you want!`}</em>{`   `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Start populating your components`}<br parentName=\"p\"></br>{`\n`}{`Just like with the page title, you can access medidata directly without a GraphQL query. Below is an example using Material-UI's card component   `}</p>\n      </li>\n    </ol>\n    <Card sx={{\n      width: 345\n    }} mdxType=\"Card\">\n      <CardContent mdxType=\"CardContent\">\n    This is some content\n      </CardContent>\n    </Card>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","CardContent","props","console","warn","layoutProps","MDXContent","components","mdxType","parentName","sx","width","isMDXComponent"],"sourceRoot":""}