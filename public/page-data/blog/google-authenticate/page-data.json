{
    "componentChunkName": "component---src-pages-blog-mdx-slug-js",
    "path": "/blog/google-authenticate/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Google OAuth2 in Gatsby\",\n  \"subheader\": \"Authenticate users without a server using Gatsby's API-as-function ability\",\n  \"date\": \"2022-05-07\",\n  \"hero_image\": \"./key_in_hand_small.jpeg\",\n  \"hero_image_credit_text\": \"https://unsplash.com/@schluesseldienstvergleich_eu\",\n  \"alt\": \"key in a hand\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Gatsby Functions through Gatsby Cloud work similarly to a Node Express server - without the server!\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"this article discusses Gatsby Functions to authenticate with Google OAuth2. For a general introduction to Gatsby API Functions \", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"https://www.gatsbyjs.com/docs/reference/functions/getting-started/\"\n  }, \"visit the Gatsby reference site here\"))), mdx(\"h1\", null, \"Overview\"), mdx(\"p\", null, \"We will need to define a number of redirects in our OAuth2 flow. From the diagram, we will hit the login api and send Google our client ID in exchange for an authorization code. Next, we will exchange this code for an authorization token and redirect our user to another page in our app on success.   \"), mdx(\"div\", {\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, mdx(\"img\", {\n    src: image,\n    width: \"800px\",\n    height: \"auto\"\n  })), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Hit the api/login route\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"We need to send our user to the src/api/login route to start the login function.\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"For this demo, we will create a button with an onClick listener  \")), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"    <Button>\\n        onClick={(event)=>{\\n            event.preventDefault();\\n            window.location.assign(\\\"/api/login\\\")\\n        }}\\n    </Button>\"), \"\\n        \"), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create a Google Oath 2.0 Client ID\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://console.cloud.google.com/\"\n  }, \"In Google Cloud\"), \" find the Credentials page and click on the +CREATE CREDENTIALS button (blue button at the top of the page)   \"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Select Create OAuth client ID from the select menu and choose application type: Web\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"You may need to complete the OAuth consent screen as well. Just put in your email as both the Authorized User and Primary Support.   \")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Saving Google Credentials\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"After clicking through the options you will receive a new ClientID and a Secret Key. Record these in your Gastsby webpage in your .env file \"))), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"md\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"   .env\\n   GOOGLE_CLIENT_ID = [\\\"REPLACE WITH YOUR KEY\\\"]\\n   GOOGLE CLIENT_SECRET = [\\\"REPLACE WITH YOUR SECRET\\\"]\"), \"\\n        \"), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"setting redirects\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Back on the Google developer dashboard, click on the newly created OAuth2 you just created.\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Under \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \" Authorized JavaScript origins \")), \" enter a URI\")), mdx(\"deckgo-highlight-code\", null, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"    http://localhost:8000 //default port for Gatsby development server\"), \"\\n        \"), mdx(\"p\", null, \"   Under \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \" Authorized redirect URIs \")), \" enter a URI   \"), mdx(\"deckgo-highlight-code\", null, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"    http://localhost:8000/api/googleAccessToken //we will create this function next\"), \"\\n        \"), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Set additional redirects\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"We will need one more redirect in our .env file to send our loggedin user to our logged in route   \")), mdx(\"deckgo-highlight-code\", null, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"    .env   \\n    APP_REDIRECT_URI = \\\"http://localhost:8000/auth-redirect\\\" //This is a page in our app that we can use to send the user around to any other route. \"), \"\\n        \"), mdx(\"h1\", null, \"Creating a Google authorization API\"), mdx(\"h4\", null, \"Now that we have setup our Google OAuth credentials we can create the functions\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create a login module\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"create a new file under src > api > login.js\"))), mdx(\"deckgo-highlight-code\", null, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"    touch src/api/login.js\"), \"\\n        \"), mdx(\"p\", null, \"   While we're at it, lets install the google APIs library   \"), mdx(\"deckgo-highlight-code\", null, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"    npm install googleapis\"), \"\\n        \"), mdx(\"p\", null, \"   In the login.js file, access your environmental variables (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \" NEVER SAVE THEM IN YOUR COMPONENTS DIRECTLY! \")), \") and initialize the handler for Google OAuth2 APIs\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"    const {google} = require(\\\"gogoleapis\\\")\\n\\n    const scopes = [\\\"profile\\\"] //set api scope to pull back user profile information\\n\\n    const clientId = process.env.GOOGLE_CLIENT_ID;   \\n    const clientSecret = process.env.GOOGLE_CLIENT_SECRET;   \\n\\n    const oauth2Client = new google.auth.OAuth2(\\n        clientId,\\n        clientSecret,\\n        process.env.GOOGLE_REDIRECT_URI\\n    )\\n\\n    google.options({auth: oauth2Client});\"), \"\\n        \"), mdx(\"p\", null, \"   We are almost done with our login module. Now that we have set our google.options to our oauth2Client we need to call our Gatsby api function to generate our authorization publicURL   \"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"    //looks very similar to other APIs doesnt it?\\n    const login = async (req, res)=>{\\n\\n    try {\\n        const authorizeUrl = oauth2Client.generateAuthUrl({\\n            access_type: \\\"offline\\\", //Must set this to offline to receive a refresh token!\\n            scope: scopes.join(\\\" \\\"), //we could have passed our single scope as a string but if we had multiple, this is how you would pass them all in. \\n        })\\n        console.log(res.redirect)\\n        //redirect to next Gatsby Function\\n        return res.redirect(authorizeUrl) //this is going to send us to src/api/googleAccessToken\\n    } catch (error) {\\n        console.error(\\\"Error logging in to Google: \\\", error);\\n    }\\n    \\n}\"), \"\\n        \"), mdx(\"h1\", null, \"Google Access Token\"), mdx(\"h3\", null, \"Phew! Now that we have our authorization code returned to us we can write our second API: googleAccessToken\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Write the function to exchange our authorization code for an access token   \"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  create a new file under src > api > googleAccessToken.js\"))), mdx(\"deckgo-highlight-code\", null, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"    touch src/api/googleAccessToken.js\"), \"\\n        \"), mdx(\"p\", null, \"   Just like before, we need to initialize the google OAuth2 client to handle the authorization flow. This time we will be exchanging our authorization returned in the last response for an authorization token \"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"const { google } = require(\\\"googleapis\\\");\\n\\nconst client_id=process.env.GOOGLE_CLIENT_ID;\\nconst clientSecret = process.env.GOOGLE_CLIENT_SECRET;\\n\\nconsole.log('In googleAccessToken');\\n//initialize googleOAuth\\nconst oauth2Client = new google.auth.OAuth2(\\n    client_id,\\n    clientSecret,\\n    //redirect to localhost until publish\\n    process.env.GOOGLE_REDIRECT_URI\\n)\\n\\n//set auth type as oauth2client\\ngoogle.options({auth: oauth2Client});\\n\\nconst googleAccessToken = async (req, res)=>{\\n\\n    try {\\n        //get the code appended from Google generateAuthUrl\\n    const code = req.query.code;\\n    console.log('code:', code);\\n    //use to get the auth token\\n    const token = await oauth2Client.getToken(code);\\n    console.log(\\\"token:\\\", token);\\n    oauth2Client.setCredentials(token);\\n\\n    //get refresh token and store\\n    oauth2Client.on('tokens', (tokens)=>{\\n        if(tokens.refresh_token){\\n            window.localStorage.setItem(\\\"Google:refresh_token\\\", tokens.refresh_token);\\n        }\\n    })\"), \"\\n        \"), mdx(\"p\", null, \"   Finally, redirect the user to auth-redirect page.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \" notice that we are packaging the token into the URL of the redirect so we can grab it from the URL on the next page. More on this in a bit \"))), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"    return res.redirect(`${process.env.APP_REDIRECT_URI}?token=${JSON.stringify(token?.tokens)}`);   \"), \"\\n        \"), mdx(\"h1\", null, \"Redirecting on client-side\"), mdx(\"h3\", null, \"We did it! Now we just need to send the user to those parts of our website that were behind our wall\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Save the token in local storage   \"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Gatsby uses @reach/router for client-side routing. This means that the browser URL location is passed in as a prop to every page. We can use this to grab the token from the URL (remember how we added this in our redirect?) and set into local storage   \"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Start by loading the query-string package for parsing our URL   \"))), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"    nmp install query-string\"), \"\\n        \"), mdx(\"p\", null, \"   Create an auth-redirect.js page   \"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"    touch src/pages/auth-redirect.js\"), \"\\n        \"), mdx(\"p\", null, \"   Parse the token from the location object passed into our page props by default\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"import React, { useEffect } from \\\"react\\\";\\nimport qs from \\\"query-string\\\";\\n\\nconst AuthRedirect = ({ location }) => {\\n  //get token from url query string\\n  const query = qs.parse(location?.search);\\n\\n  useEffect(() => {\\n    //check that there is a location object\\n    if (typeof window !== `undefined`) {\\n      window.localStorage.setItem(`google:tokens`, query.token);\\n    }\"), \"\\n        \"), mdx(\"p\", null, \"   Finally, send the user to our secure page   \"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"    //redirect to app homepage\\n    setTimeout(() => {\\n      window.location.assign(\\\"/app/\\\");\\n    }, 1000);\\n  });\\n  \\n  //This message will display for 1 second until user is redirected to /app\\n  return <p>Logging in...</p>;\"), \"\\n        \"), mdx(\"h1\", null, \"We did it!\"), mdx(\"h3\", null, \"Our user should now be logged in via Google. Read on to learn more about \", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://link\"\n  }, \"how to handle client-side private routes\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Google OAuth2 in Gatsby","subheader":"Authenticate users without a server using Gatsby's API-as-function ability","date":"May 07, 2022","alt":"key in a hand","hero_image_credit_text":"https://unsplash.com/@schluesseldienstvergleich_eu","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#d8d8d8","images":{"fallback":{"src":"/static/79a1ee0cda56e1a205e87c3afb68b61e/468b9/key_in_hand_small.jpg","srcSet":"/static/79a1ee0cda56e1a205e87c3afb68b61e/67e32/key_in_hand_small.jpg 160w,\n/static/79a1ee0cda56e1a205e87c3afb68b61e/670b5/key_in_hand_small.jpg 320w,\n/static/79a1ee0cda56e1a205e87c3afb68b61e/468b9/key_in_hand_small.jpg 640w","sizes":"(min-width: 640px) 640px, 100vw"},"sources":[{"srcSet":"/static/79a1ee0cda56e1a205e87c3afb68b61e/79906/key_in_hand_small.webp 160w,\n/static/79a1ee0cda56e1a205e87c3afb68b61e/13b91/key_in_hand_small.webp 320w,\n/static/79a1ee0cda56e1a205e87c3afb68b61e/7090f/key_in_hand_small.webp 640w","type":"image/webp","sizes":"(min-width: 640px) 640px, 100vw"}]},"width":640,"height":481}}}}}},"pageContext":{"id":"544a875a-432a-52bb-b362-f931ce97cd0d","slug":"google-authenticate/","__params":{"slug":"google-authenticate"}}},
    "staticQueryHashes": ["3159585216"]}