{
    "componentChunkName": "component---src-pages-portfolio-mdx-slug-js",
    "path": "/portfolio/muffin-to-it/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"MuffinToIt!\",\n  \"subheader\": \"A mobile eCommerce application using JAMSTACK (headless CMS, Markdown) in React-Native\",\n  \"date\": \"2022-06-16\",\n  \"hero_image\": \"./muffintoit_logo.png\",\n  \"hero_image_credit_text\": \"https://github.com/Dev1nxavier/muffintoit-mobile.git\",\n  \"alt\": \"iPhone Screenshot\",\n  \"hero_vid\": \"https://www.youtube.com/embed/bRhzW2b8q4w\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Description\"), mdx(\"p\", null, \"A fully-functional eCommerce mobile application built with React-Native and deployed on iOS and Android. The app was designed using the JAMSTACK principals. Data is served up through a headless CMS. For an extra layer of security, the app hits endpoints on an Express server that makes calls to a Firebase real-time database for user registration and authentication.  \"), mdx(\"h2\", null, \"Overall App Design\"), mdx(\"p\", null, \"The app is designed to use a headless CMS as the primary source-of truth. There is a small performance concession due to server calls on changes. For example, when a user adds a new item, a call is made to the /addToCart endpoint and the response is dispatched to the CartState. This ensures that there is no disconnect between the session State and the CMS. \"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Dev1nxavier/muffintoit-mobile\"\n  }, \"Checkout the repository here\"), \"   \"), mdx(\"h1\", null, \"Technology\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"React-Native\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redux & Redux Toolkit   \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expo   \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"React   \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NodeJS   \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Express   \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Google Firebase   \")), mdx(\"h1\", null, \"How I did it\"), mdx(\"h2\", null, \"App Navigation\"), mdx(\"p\", null, \"The mobile app uses react-navigation to setup a stack navigator and a bottom-tab navigator. The tab-navigator is a child of the stack navigator, ensuring that the tabs are only available to certain screens and preventing unintented workflow breakages.   \"), mdx(Video, {\n    videoSrcURL: 'https://www.youtube.com/embed/NtXx92fo27Q',\n    videoTitle: \"App Navigation\",\n    mdxType: \"Video\"\n  }), mdx(\"h2\", null, \"User Authentication\"), mdx(\"p\", null, \"A Google Firebase real-time database was used for user account creation, association with the order history, and user authentication. Through Firebase a user logs in with an email and password and Google exchanges this for an access token. If the user is logged in, a completed order is automatically saved to the user's database profile on successful checkout. In the order history tab, a user can access all prior orders completed for wich that user was logged in prior to checkout. \"), mdx(Video, {\n    videoSrcURL: \"https://www.youtube.com/embed/XmN4_iowuo8\",\n    videoTitle: \"App User Authentication\",\n    mdxType: \"Video\"\n  }), mdx(\"h2\", null, \"Checkout UX\"), mdx(\"p\", null, \"Stripe was used as the primary payment gateway. A payment intent is initiated when the user accesses the REVIEW screen. This intent takes the user's customer ID and cart total (including tax and shipping) and returns an ephemeral key, customer ID, checkout ID for use in payment processing. \"), mdx(\"p\", null, \"When the user clicks the Submit Payment button, a Stripe UI is presented for the user to input credit card details.\"), mdx(Video, {\n    videoSrcURL: \"https://youtube.com/embed/GFJI0Jq_fIs\",\n    videoTitle: \"App checkout UX\",\n    mdxType: \"Video\"\n  }), mdx(\"p\", null, \"The app includes a URL redirect to allow any payment processing requiring the user to visit their bank's website to be redirected back to the app on success. Once the user clicks Submit the UI is cleared and the user is redirected to the Thank You screen.\"), mdx(\"h2\", null, \"State Management\"), mdx(\"p\", null, \"State management is handled through Redux and Redux toolkit. Several slices are used to manage items in the cart (CartState), user profile information (UserState), and products downloaded from the CMS (productsState). \"), mdx(\"h2\", null, \"Opportunies\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In the Review screen, after a successful payment, a callback is initiated that updates the app state and redirects the user to the Thank You screen. If the user exits the Review screen before the callback, there may be an error. To better address this, future releases will use a webhook to listen for this event instead of a callback function.  \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The app uses Firebase to store user information and authenticate users. The eCommerce CMS duplicates saving of orders but does not associate the order with the Firebase user ID. Future releases will fully leverage the eCommerce CMS to authenticate users with a JWT sent to their email. When a user clicks the link in their email, the JWT is exchanged for an access token. This requires a custom URL to redirect the user back into the app. Custom URLs are not available as of version 1 of this app from the eCommerce CMS. \"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"MuffinToIt!","subheader":"A mobile eCommerce application using JAMSTACK (headless CMS, Markdown) in React-Native","date":"June 16, 2022","alt":"iPhone Screenshot","hero_vid":"https://www.youtube.com/embed/bRhzW2b8q4w","hero_image_credit_text":"https://github.com/Dev1nxavier/muffintoit-mobile.git","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/73ade18809509c6feae26fa1fc067372/82c11/muffintoit_logo.png","srcSet":"/static/73ade18809509c6feae26fa1fc067372/2fd20/muffintoit_logo.png 125w,\n/static/73ade18809509c6feae26fa1fc067372/de391/muffintoit_logo.png 250w,\n/static/73ade18809509c6feae26fa1fc067372/82c11/muffintoit_logo.png 500w","sizes":"(min-width: 500px) 500px, 100vw"},"sources":[{"srcSet":"/static/73ade18809509c6feae26fa1fc067372/d66e1/muffintoit_logo.webp 125w,\n/static/73ade18809509c6feae26fa1fc067372/e7160/muffintoit_logo.webp 250w,\n/static/73ade18809509c6feae26fa1fc067372/5f169/muffintoit_logo.webp 500w","type":"image/webp","sizes":"(min-width: 500px) 500px, 100vw"}]},"width":500,"height":500}}}}}},"pageContext":{"id":"0d4b3051-bf1b-5cfb-a871-cfc0fdd187c0","slug":"muffin-to-it/","__params":{"slug":"muffin-to-it"}}},
    "staticQueryHashes": ["3159585216"]}